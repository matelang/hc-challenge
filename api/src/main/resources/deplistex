{
    apiVersion: apps/v1
    items: [class V1Deployment {
        apiVersion: null
        kind: null
        metadata: class V1ObjectMeta {
            annotations: {deployment.kubernetes.io/revision=1}
            clusterName: null
            creationTimestamp: 2019-08-06T17:01:33.000+03:00
            deletionGracePeriodSeconds: null
            deletionTimestamp: null
            finalizers: null
            generateName: null
            generation: 1
            initializers: null
            labels: {app=quoting-cat-mysql, chart=mysql-1.3.0, heritage=Tiller, release=quoting-cat}
            managedFields: null
            name: quoting-cat-mysql
            namespace: default
            ownerReferences: null
            resourceVersion: 2791193
            selfLink: /apis/apps/v1/namespaces/default/deployments/quoting-cat-mysql
            uid: b2c7b94f-b852-11e9-83a2-6ae7d19275bf
        }
        spec: class V1DeploymentSpec {
            minReadySeconds: null
            paused: null
            progressDeadlineSeconds: 2147483647
            replicas: 1
            revisionHistoryLimit: 2147483647
            selector: class V1LabelSelector {
                matchExpressions: null
                matchLabels: {app=quoting-cat-mysql}
            }
            strategy: class V1DeploymentStrategy {
                rollingUpdate: class V1RollingUpdateDeployment {
                    maxSurge: 1
                    maxUnavailable: 1
                }
                type: RollingUpdate
            }
            template: class V1PodTemplateSpec {
                metadata: class V1ObjectMeta {
                    annotations: null
                    clusterName: null
                    creationTimestamp: null
                    deletionGracePeriodSeconds: null
                    deletionTimestamp: null
                    finalizers: null
                    generateName: null
                    generation: null
                    initializers: null
                    labels: {app=quoting-cat-mysql}
                    managedFields: null
                    name: null
                    namespace: null
                    ownerReferences: null
                    resourceVersion: null
                    selfLink: null
                    uid: null
                }
                spec: class V1PodSpec {
                    activeDeadlineSeconds: null
                    affinity: null
                    automountServiceAccountToken: null
                    containers: [class V1Container {
                        args: null
                        command: null
                        env: [class V1EnvVar {
                            name: MYSQL_ROOT_PASSWORD
                            value: null
                            valueFrom: class V1EnvVarSource {
                                configMapKeyRef: null
                                fieldRef: null
                                resourceFieldRef: null
                                secretKeyRef: class V1SecretKeySelector {
                                    key: mysql-root-password
                                    name: quoting-cat-mysql
                                    optional: null
                                }
                            }
                        }, class V1EnvVar {
                            name: MYSQL_PASSWORD
                            value: null
                            valueFrom: class V1EnvVarSource {
                                configMapKeyRef: null
                                fieldRef: null
                                resourceFieldRef: null
                                secretKeyRef: class V1SecretKeySelector {
                                    key: mysql-password
                                    name: quoting-cat-mysql
                                    optional: true
                                }
                            }
                        }, class V1EnvVar {
                            name: MYSQL_USER
                            value: null
                            valueFrom: null
                        }, class V1EnvVar {
                            name: MYSQL_DATABASE
                            value: null
                            valueFrom: null
                        }]
                        envFrom: null
                        image: mysql:5.7.14
                        imagePullPolicy: IfNotPresent
                        lifecycle: null
                        livenessProbe: class V1Probe {
                            exec: class V1ExecAction {
                                command: [sh, -c, mysqladmin ping -u root -p${MYSQL_ROOT_PASSWORD}]
                            }
                            failureThreshold: 3
                            httpGet: null
                            initialDelaySeconds: 30
                            periodSeconds: 10
                            successThreshold: 1
                            tcpSocket: null
                            timeoutSeconds: 5
                        }
                        name: quoting-cat-mysql
                        ports: [class V1ContainerPort {
                            containerPort: 3306
                            hostIP: null
                            hostPort: null
                            name: mysql
                            protocol: TCP
                        }]
                        readinessProbe: class V1Probe {
                            exec: class V1ExecAction {
                                command: [sh, -c, mysqladmin ping -u root -p${MYSQL_ROOT_PASSWORD}]
                            }
                            failureThreshold: 3
                            httpGet: null
                            initialDelaySeconds: 5
                            periodSeconds: 10
                            successThreshold: 1
                            tcpSocket: null
                            timeoutSeconds: 1
                        }
                        resources: class V1ResourceRequirements {
                            limits: null
                            requests: {cpu=Quantity{number=0.100, format=DECIMAL_SI}, memory=Quantity{number=268435456, format=BINARY_SI}}
                        }
                        securityContext: null
                        stdin: null
                        stdinOnce: null
                        terminationMessagePath: /dev/termination-log
                        terminationMessagePolicy: File
                        tty: null
                        volumeDevices: null
                        volumeMounts: [class V1VolumeMount {
                            mountPath: /var/lib/mysql
                            mountPropagation: null
                            name: data
                            readOnly: null
                            subPath: null
                            subPathExpr: null
                        }]
                        workingDir: null
                    }]
                    dnsConfig: null
                    dnsPolicy: ClusterFirst
                    enableServiceLinks: null
                    hostAliases: null
                    hostIPC: null
                    hostNetwork: null
                    hostPID: null
                    hostname: null
                    imagePullSecrets: null
                    initContainers: [class V1Container {
                        args: null
                        command: [rm, -fr, /var/lib/mysql/lost+found]
                        env: null
                        envFrom: null
                        image: busybox:1.29.3
                        imagePullPolicy: IfNotPresent
                        lifecycle: null
                        livenessProbe: null
                        name: remove-lost-found
                        ports: null
                        readinessProbe: null
                        resources: class V1ResourceRequirements {
                            limits: null
                            requests: {cpu=Quantity{number=0.010, format=DECIMAL_SI}, memory=Quantity{number=10485760, format=BINARY_SI}}
                        }
                        securityContext: null
                        stdin: null
                        stdinOnce: null
                        terminationMessagePath: /dev/termination-log
                        terminationMessagePolicy: File
                        tty: null
                        volumeDevices: null
                        volumeMounts: [class V1VolumeMount {
                            mountPath: /var/lib/mysql
                            mountPropagation: null
                            name: data
                            readOnly: null
                            subPath: null
                            subPathExpr: null
                        }]
                        workingDir: null
                    }]
                    nodeName: null
                    nodeSelector: null
                    priority: null
                    priorityClassName: null
                    readinessGates: null
                    restartPolicy: Always
                    runtimeClassName: null
                    schedulerName: default-scheduler
                    securityContext: class V1PodSecurityContext {
                        fsGroup: null
                        runAsGroup: null
                        runAsNonRoot: null
                        runAsUser: null
                        seLinuxOptions: null
                        supplementalGroups: null
                        sysctls: null
                    }
                    serviceAccount: null
                    serviceAccountName: null
                    shareProcessNamespace: null
                    subdomain: null
                    terminationGracePeriodSeconds: 30
                    tolerations: null
                    volumes: [class V1Volume {
                        awsElasticBlockStore: null
                        azureDisk: null
                        azureFile: null
                        cephfs: null
                        cinder: null
                        configMap: null
                        csi: null
                        downwardAPI: null
                        emptyDir: null
                        fc: null
                        flexVolume: null
                        flocker: null
                        gcePersistentDisk: null
                        gitRepo: null
                        glusterfs: null
                        hostPath: null
                        iscsi: null
                        name: data
                        nfs: null
                        persistentVolumeClaim: class V1PersistentVolumeClaimVolumeSource {
                            claimName: quoting-cat-mysql
                            readOnly: null
                        }
                        photonPersistentDisk: null
                        portworxVolume: null
                        projected: null
                        quobyte: null
                        rbd: null
                        scaleIO: null
                        secret: null
                        storageos: null
                        vsphereVolume: null
                    }]
                }
            }
        }
        status: class V1DeploymentStatus {
            availableReplicas: 1
            collisionCount: null
            conditions: [class V1DeploymentCondition {
                lastTransitionTime: 2019-08-06T17:01:33.000+03:00
                lastUpdateTime: 2019-08-06T17:01:33.000+03:00
                message: Deployment has minimum availability.
                reason: MinimumReplicasAvailable
                status: True
                type: Available
            }]
            observedGeneration: 1
            readyReplicas: 1
            replicas: 1
            unavailableReplicas: null
            updatedReplicas: 1
        }
    }, class V1Deployment {
        apiVersion: null
        kind: null
        metadata: class V1ObjectMeta {
            annotations: {deployment.kubernetes.io/revision=1}
            clusterName: null
            creationTimestamp: 2019-09-03T14:01:42.000+03:00
            deletionGracePeriodSeconds: null
            deletionTimestamp: null
            finalizers: null
            generateName: null
            generation: 1
            initializers: null
            labels: {app=nginx-ingress, chart=nginx-ingress-1.17.1, component=controller, heritage=Helm, release=rapidbox-ingress}
            managedFields: null
            name: rapidbox-ingress-nginx-ingress-controller
            namespace: default
            ownerReferences: null
            resourceVersion: 3611783
            selfLink: /apis/apps/v1/namespaces/default/deployments/rapidbox-ingress-nginx-ingress-controller
            uid: 3640b2f1-ce3a-11e9-9ca0-52dde454b2bc
        }
        spec: class V1DeploymentSpec {
            minReadySeconds: null
            paused: null
            progressDeadlineSeconds: 2147483647
            replicas: 1
            revisionHistoryLimit: 10
            selector: class V1LabelSelector {
                matchExpressions: null
                matchLabels: {app=nginx-ingress, component=controller, release=rapidbox-ingress}
            }
            strategy: class V1DeploymentStrategy {
                rollingUpdate: class V1RollingUpdateDeployment {
                    maxSurge: 1
                    maxUnavailable: 1
                }
                type: RollingUpdate
            }
            template: class V1PodTemplateSpec {
                metadata: class V1ObjectMeta {
                    annotations: null
                    clusterName: null
                    creationTimestamp: null
                    deletionGracePeriodSeconds: null
                    deletionTimestamp: null
                    finalizers: null
                    generateName: null
                    generation: null
                    initializers: null
                    labels: {app=nginx-ingress, component=controller, release=rapidbox-ingress}
                    managedFields: null
                    name: null
                    namespace: null
                    ownerReferences: null
                    resourceVersion: null
                    selfLink: null
                    uid: null
                }
                spec: class V1PodSpec {
                    activeDeadlineSeconds: null
                    affinity: null
                    automountServiceAccountToken: null
                    containers: [class V1Container {
                        args: [/nginx-ingress-controller, --default-backend-service=default/rapidbox-ingress-nginx-ingress-default-backend, --election-id=ingress-controller-leader, --ingress-class=nginx, --configmap=default/rapidbox-ingress-nginx-ingress-controller]
                        command: null
                        env: [class V1EnvVar {
                            name: POD_NAME
                            value: null
                            valueFrom: class V1EnvVarSource {
                                configMapKeyRef: null
                                fieldRef: class V1ObjectFieldSelector {
                                    apiVersion: v1
                                    fieldPath: metadata.name
                                }
                                resourceFieldRef: null
                                secretKeyRef: null
                            }
                        }, class V1EnvVar {
                            name: POD_NAMESPACE
                            value: null
                            valueFrom: class V1EnvVarSource {
                                configMapKeyRef: null
                                fieldRef: class V1ObjectFieldSelector {
                                    apiVersion: v1
                                    fieldPath: metadata.namespace
                                }
                                resourceFieldRef: null
                                secretKeyRef: null
                            }
                        }]
                        envFrom: null
                        image: quay.io/kubernetes-ingress-controller/nginx-ingress-controller:0.25.1
                        imagePullPolicy: IfNotPresent
                        lifecycle: null
                        livenessProbe: class V1Probe {
                            exec: null
                            failureThreshold: 3
                            httpGet: class V1HTTPGetAction {
                                host: null
                                httpHeaders: null
                                path: /healthz
                                port: 10254
                                scheme: HTTP
                            }
                            initialDelaySeconds: 10
                            periodSeconds: 10
                            successThreshold: 1
                            tcpSocket: null
                            timeoutSeconds: 1
                        }
                        name: nginx-ingress-controller
                        ports: [class V1ContainerPort {
                            containerPort: 80
                            hostIP: null
                            hostPort: null
                            name: http
                            protocol: TCP
                        }, class V1ContainerPort {
                            containerPort: 443
                            hostIP: null
                            hostPort: null
                            name: https
                            protocol: TCP
                        }]
                        readinessProbe: class V1Probe {
                            exec: null
                            failureThreshold: 3
                            httpGet: class V1HTTPGetAction {
                                host: null
                                httpHeaders: null
                                path: /healthz
                                port: 10254
                                scheme: HTTP
                            }
                            initialDelaySeconds: 10
                            periodSeconds: 10
                            successThreshold: 1
                            tcpSocket: null
                            timeoutSeconds: 1
                        }
                        resources: class V1ResourceRequirements {
                            limits: null
                            requests: null
                        }
                        securityContext: class V1SecurityContext {
                            allowPrivilegeEscalation: true
                            capabilities: class V1Capabilities {
                                add: [NET_BIND_SERVICE]
                                drop: [ALL]
                            }
                            privileged: null
                            procMount: null
                            readOnlyRootFilesystem: null
                            runAsGroup: null
                            runAsNonRoot: null
                            runAsUser: 33
                            seLinuxOptions: null
                        }
                        stdin: null
                        stdinOnce: null
                        terminationMessagePath: /dev/termination-log
                        terminationMessagePolicy: File
                        tty: null
                        volumeDevices: null
                        volumeMounts: null
                        workingDir: null
                    }]
                    dnsConfig: null
                    dnsPolicy: ClusterFirst
                    enableServiceLinks: null
                    hostAliases: null
                    hostIPC: null
                    hostNetwork: null
                    hostPID: null
                    hostname: null
                    imagePullSecrets: null
                    initContainers: null
                    nodeName: null
                    nodeSelector: null
                    priority: null
                    priorityClassName: null
                    readinessGates: null
                    restartPolicy: Always
                    runtimeClassName: null
                    schedulerName: default-scheduler
                    securityContext: class V1PodSecurityContext {
                        fsGroup: null
                        runAsGroup: null
                        runAsNonRoot: null
                        runAsUser: null
                        seLinuxOptions: null
                        supplementalGroups: null
                        sysctls: null
                    }
                    serviceAccount: rapidbox-ingress-nginx-ingress
                    serviceAccountName: rapidbox-ingress-nginx-ingress
                    shareProcessNamespace: null
                    subdomain: null
                    terminationGracePeriodSeconds: 60
                    tolerations: null
                    volumes: null
                }
            }
        }
        status: class V1DeploymentStatus {
            availableReplicas: 1
            collisionCount: null
            conditions: [class V1DeploymentCondition {
                lastTransitionTime: 2019-09-03T14:01:42.000+03:00
                lastUpdateTime: 2019-09-03T14:01:42.000+03:00
                message: Deployment has minimum availability.
                reason: MinimumReplicasAvailable
                status: True
                type: Available
            }]
            observedGeneration: 1
            readyReplicas: 1
            replicas: 1
            unavailableReplicas: null
            updatedReplicas: 1
        }
    }, class V1Deployment {
        apiVersion: null
        kind: null
        metadata: class V1ObjectMeta {
            annotations: {deployment.kubernetes.io/revision=1}
            clusterName: null
            creationTimestamp: 2019-09-03T14:01:42.000+03:00
            deletionGracePeriodSeconds: null
            deletionTimestamp: null
            finalizers: null
            generateName: null
            generation: 1
            initializers: null
            labels: {app=nginx-ingress, chart=nginx-ingress-1.17.1, component=default-backend, heritage=Helm, release=rapidbox-ingress}
            managedFields: null
            name: rapidbox-ingress-nginx-ingress-default-backend
            namespace: default
            ownerReferences: null
            resourceVersion: 3611772
            selfLink: /apis/apps/v1/namespaces/default/deployments/rapidbox-ingress-nginx-ingress-default-backend
            uid: 36532f52-ce3a-11e9-9ca0-52dde454b2bc
        }
        spec: class V1DeploymentSpec {
            minReadySeconds: null
            paused: null
            progressDeadlineSeconds: 2147483647
            replicas: 1
            revisionHistoryLimit: 10
            selector: class V1LabelSelector {
                matchExpressions: null
                matchLabels: {app=nginx-ingress, component=default-backend, release=rapidbox-ingress}
            }
            strategy: class V1DeploymentStrategy {
                rollingUpdate: class V1RollingUpdateDeployment {
                    maxSurge: 1
                    maxUnavailable: 1
                }
                type: RollingUpdate
            }
            template: class V1PodTemplateSpec {
                metadata: class V1ObjectMeta {
                    annotations: null
                    clusterName: null
                    creationTimestamp: null
                    deletionGracePeriodSeconds: null
                    deletionTimestamp: null
                    finalizers: null
                    generateName: null
                    generation: null
                    initializers: null
                    labels: {app=nginx-ingress, component=default-backend, release=rapidbox-ingress}
                    managedFields: null
                    name: null
                    namespace: null
                    ownerReferences: null
                    resourceVersion: null
                    selfLink: null
                    uid: null
                }
                spec: class V1PodSpec {
                    activeDeadlineSeconds: null
                    affinity: null
                    automountServiceAccountToken: null
                    containers: [class V1Container {
                        args: null
                        command: null
                        env: null
                        envFrom: null
                        image: k8s.gcr.io/defaultbackend-amd64:1.5
                        imagePullPolicy: IfNotPresent
                        lifecycle: null
                        livenessProbe: class V1Probe {
                            exec: null
                            failureThreshold: 3
                            httpGet: class V1HTTPGetAction {
                                host: null
                                httpHeaders: null
                                path: /healthz
                                port: 8080
                                scheme: HTTP
                            }
                            initialDelaySeconds: 30
                            periodSeconds: 10
                            successThreshold: 1
                            tcpSocket: null
                            timeoutSeconds: 5
                        }
                        name: nginx-ingress-default-backend
                        ports: [class V1ContainerPort {
                            containerPort: 8080
                            hostIP: null
                            hostPort: null
                            name: http
                            protocol: TCP
                        }]
                        readinessProbe: class V1Probe {
                            exec: null
                            failureThreshold: 6
                            httpGet: class V1HTTPGetAction {
                                host: null
                                httpHeaders: null
                                path: /healthz
                                port: 8080
                                scheme: HTTP
                            }
                            initialDelaySeconds: null
                            periodSeconds: 5
                            successThreshold: 1
                            tcpSocket: null
                            timeoutSeconds: 5
                        }
                        resources: class V1ResourceRequirements {
                            limits: null
                            requests: null
                        }
                        securityContext: class V1SecurityContext {
                            allowPrivilegeEscalation: null
                            capabilities: null
                            privileged: null
                            procMount: null
                            readOnlyRootFilesystem: null
                            runAsGroup: null
                            runAsNonRoot: null
                            runAsUser: 65534
                            seLinuxOptions: null
                        }
                        stdin: null
                        stdinOnce: null
                        terminationMessagePath: /dev/termination-log
                        terminationMessagePolicy: File
                        tty: null
                        volumeDevices: null
                        volumeMounts: null
                        workingDir: null
                    }]
                    dnsConfig: null
                    dnsPolicy: ClusterFirst
                    enableServiceLinks: null
                    hostAliases: null
                    hostIPC: null
                    hostNetwork: null
                    hostPID: null
                    hostname: null
                    imagePullSecrets: null
                    initContainers: null
                    nodeName: null
                    nodeSelector: null
                    priority: null
                    priorityClassName: null
                    readinessGates: null
                    restartPolicy: Always
                    runtimeClassName: null
                    schedulerName: default-scheduler
                    securityContext: class V1PodSecurityContext {
                        fsGroup: null
                        runAsGroup: null
                        runAsNonRoot: null
                        runAsUser: null
                        seLinuxOptions: null
                        supplementalGroups: null
                        sysctls: null
                    }
                    serviceAccount: null
                    serviceAccountName: null
                    shareProcessNamespace: null
                    subdomain: null
                    terminationGracePeriodSeconds: 60
                    tolerations: null
                    volumes: null
                }
            }
        }
        status: class V1DeploymentStatus {
            availableReplicas: 1
            collisionCount: null
            conditions: [class V1DeploymentCondition {
                lastTransitionTime: 2019-09-03T14:01:42.000+03:00
                lastUpdateTime: 2019-09-03T14:01:42.000+03:00
                message: Deployment has minimum availability.
                reason: MinimumReplicasAvailable
                status: True
                type: Available
            }]
            observedGeneration: 1
            readyReplicas: 1
            replicas: 1
            unavailableReplicas: null
            updatedReplicas: 1
        }
    }, class V1Deployment {
        apiVersion: null
        kind: null
        metadata: class V1ObjectMeta {
            annotations: {deployment.kubernetes.io/revision=1}
            clusterName: null
            creationTimestamp: 2019-09-03T14:23:37.000+03:00
            deletionGracePeriodSeconds: null
            deletionTimestamp: null
            finalizers: null
            generateName: null
            generation: 1
            initializers: null
            labels: {app.kubernetes.io/instance=rapidbox-webapp, app.kubernetes.io/managed-by=Helm, app.kubernetes.io/name=rapidbox-webapp, app.kubernetes.io/version=0.0.1, helm.sh/chart=rapidbox-app-0.1.0}
            managedFields: null
            name: rapidbox-webapp
            namespace: default
            ownerReferences: null
            resourceVersion: 3613643
            selfLink: /apis/apps/v1/namespaces/default/deployments/rapidbox-webapp
            uid: 45db910c-ce3d-11e9-9ca0-52dde454b2bc
        }
        spec: class V1DeploymentSpec {
            minReadySeconds: null
            paused: null
            progressDeadlineSeconds: 600
            replicas: 1
            revisionHistoryLimit: 10
            selector: class V1LabelSelector {
                matchExpressions: null
                matchLabels: {app.kubernetes.io/instance=rapidbox-webapp, app.kubernetes.io/name=rapidbox-webapp}
            }
            strategy: class V1DeploymentStrategy {
                rollingUpdate: class V1RollingUpdateDeployment {
                    maxSurge: 25%
                    maxUnavailable: 25%
                }
                type: RollingUpdate
            }
            template: class V1PodTemplateSpec {
                metadata: class V1ObjectMeta {
                    annotations: null
                    clusterName: null
                    creationTimestamp: null
                    deletionGracePeriodSeconds: null
                    deletionTimestamp: null
                    finalizers: null
                    generateName: null
                    generation: null
                    initializers: null
                    labels: {app.kubernetes.io/instance=rapidbox-webapp, app.kubernetes.io/name=rapidbox-webapp}
                    managedFields: null
                    name: null
                    namespace: null
                    ownerReferences: null
                    resourceVersion: null
                    selfLink: null
                    uid: null
                }
                spec: class V1PodSpec {
                    activeDeadlineSeconds: null
                    affinity: null
                    automountServiceAccountToken: null
                    containers: [class V1Container {
                        args: null
                        command: null
                        env: null
                        envFrom: null
                        image: akspocnimjxc.azurecr.io/rapidbox/webapp:0.0.1
                        imagePullPolicy: IfNotPresent
                        lifecycle: null
                        livenessProbe: class V1Probe {
                            exec: null
                            failureThreshold: 3
                            httpGet: class V1HTTPGetAction {
                                host: null
                                httpHeaders: null
                                path: /
                                port: http
                                scheme: HTTP
                            }
                            initialDelaySeconds: null
                            periodSeconds: 10
                            successThreshold: 1
                            tcpSocket: null
                            timeoutSeconds: 1
                        }
                        name: rapidbox-app
                        ports: [class V1ContainerPort {
                            containerPort: 80
                            hostIP: null
                            hostPort: null
                            name: http
                            protocol: TCP
                        }]
                        readinessProbe: class V1Probe {
                            exec: null
                            failureThreshold: 3
                            httpGet: class V1HTTPGetAction {
                                host: null
                                httpHeaders: null
                                path: /
                                port: http
                                scheme: HTTP
                            }
                            initialDelaySeconds: null
                            periodSeconds: 10
                            successThreshold: 1
                            tcpSocket: null
                            timeoutSeconds: 1
                        }
                        resources: class V1ResourceRequirements {
                            limits: null
                            requests: null
                        }
                        securityContext: null
                        stdin: null
                        stdinOnce: null
                        terminationMessagePath: /dev/termination-log
                        terminationMessagePolicy: File
                        tty: null
                        volumeDevices: null
                        volumeMounts: null
                        workingDir: null
                    }]
                    dnsConfig: null
                    dnsPolicy: ClusterFirst
                    enableServiceLinks: null
                    hostAliases: null
                    hostIPC: null
                    hostNetwork: null
                    hostPID: null
                    hostname: null
                    imagePullSecrets: null
                    initContainers: null
                    nodeName: null
                    nodeSelector: null
                    priority: null
                    priorityClassName: null
                    readinessGates: null
                    restartPolicy: Always
                    runtimeClassName: null
                    schedulerName: default-scheduler
                    securityContext: class V1PodSecurityContext {
                        fsGroup: null
                        runAsGroup: null
                        runAsNonRoot: null
                        runAsUser: null
                        seLinuxOptions: null
                        supplementalGroups: null
                        sysctls: null
                    }
                    serviceAccount: null
                    serviceAccountName: null
                    shareProcessNamespace: null
                    subdomain: null
                    terminationGracePeriodSeconds: 30
                    tolerations: null
                    volumes: null
                }
            }
        }
        status: class V1DeploymentStatus {
            availableReplicas: 1
            collisionCount: null
            conditions: [class V1DeploymentCondition {
                lastTransitionTime: 2019-09-03T14:23:46.000+03:00
                lastUpdateTime: 2019-09-03T14:23:46.000+03:00
                message: Deployment has minimum availability.
                reason: MinimumReplicasAvailable
                status: True
                type: Available
            }, class V1DeploymentCondition {
                lastTransitionTime: 2019-09-03T14:23:37.000+03:00
                lastUpdateTime: 2019-09-03T14:23:46.000+03:00
                message: ReplicaSet "rapidbox-webapp-8fc6d46f8" has successfully progressed.
                reason: NewReplicaSetAvailable
                status: True
                type: Progressing
            }]
            observedGeneration: 1
            readyReplicas: 1
            replicas: 1
            unavailableReplicas: null
            updatedReplicas: 1
        }
    }]
    kind: DeploymentList
    metadata: class V1ListMeta {
        _continue: null
        resourceVersion: 3968037
        selfLink: /apis/apps/v1/namespaces/default/deployments
    }
}
